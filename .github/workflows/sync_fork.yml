name: Sync Fork

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check trigger type
        id: trigger
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "triggered_by=schedule" >> $GITHUB_OUTPUT
            echo "üïê Triggered by schedule (cron)"
          else
            echo "triggered_by=manual" >> $GITHUB_OUTPUT  
            echo "üë§ Triggered manually"
          fi

      - name: Get upstream repository URL
        id: get-upstream
        run: |
          repo_json=$(gh api repos/${{ github.repository }})
          upstream_url=$(echo "$repo_json" | jq -r '.parent.clone_url // ""')
          if [ -z "$upstream_url" ] || [ "$upstream_url" = "null" ]; then
            echo "This is not a fork. Skipping sync."
            echo "is_fork=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "is_fork=true" >> $GITHUB_OUTPUT
          echo "upstream_url=$upstream_url" >> $GITHUB_OUTPUT
          echo "üîÑ Found upstream: $upstream_url"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Sync with upstream (exclude workflows for cron)
        if: steps.get-upstream.outputs.is_fork == 'true'
        run: |
          BRANCH="${{ github.event.repository.default_branch }}"
          UPSTREAM_URL="${{ steps.get-upstream.outputs.upstream_url }}"
          IS_CRON="${{ steps.trigger.outputs.triggered_by }}"
          
          echo "üîß Adding upstream remote..."
          git remote add upstream "$UPSTREAM_URL"
          
          echo "üì• Fetching upstream changes..."
          git fetch upstream
          
          echo "üîÑ Checking current branch status..."
          git checkout "$BRANCH"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –∫–æ–º–º–∏—Ç—ã –≤ upstream
          if git merge-base --is-ancestor HEAD upstream/"$BRANCH" 2>/dev/null; then
            echo "‚úÖ Fork is already up to date with upstream"
            exit 0
          fi
          
          echo "üîÄ Merging upstream changes..."
          if ! git merge upstream/"$BRANCH" --no-edit --allow-unrelated-histories; then
            echo "‚ö†Ô∏è Merge conflict detected. Manual resolution required."
            exit 1
          fi
          
          # –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ workflows - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏—Ö
          if [ "$IS_CRON" = "schedule" ]; then
            if git diff --name-only HEAD~1 HEAD | grep -q "^\.github/workflows/"; then
              echo "‚ö†Ô∏è Workflow changes detected in cron run - reverting workflow changes"
              
              # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ workflow —Ñ–∞–π–ª—ã –∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏—Ö –∫ –≤–µ—Ä—Å–∏–∏ —Ñ–æ—Ä–∫–∞
              git diff --name-only HEAD~1 HEAD | grep "^\.github/workflows/" | while read -r file; do
                if [ -f "$file" ]; then
                  echo "üîÑ Reverting $file to fork version"
                  git checkout HEAD~1 -- "$file"
                fi
              done
              
              # –ö–æ–º–º–∏—Ç–∏–º –æ—Ç–∫–∞—Ç –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              if ! git diff --quiet; then
                git add .github/workflows/
                git commit -m "Revert workflow changes from upstream (cron safety)"
              fi
            fi
          fi
          
          echo "üì§ Pushing changes to fork..."
          git push origin "$BRANCH"
          
          echo "‚úÖ Successfully synced fork with upstream"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.get-upstream.outputs.is_fork }}" = "true" ]; then
            echo "üìä Sync operation completed"
            echo "- Repository: ${{ github.repository }}"
            echo "- Branch: ${{ github.event.repository.default_branch }}"
            echo "- Trigger: ${{ steps.trigger.outputs.triggered_by }}"
            echo "- Status: ${{ job.status }}"
          else
            echo "‚ÑπÔ∏è Repository is not a fork, sync skipped"
          fi